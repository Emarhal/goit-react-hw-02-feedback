{"version":3,"sources":["Components/statistics/notification/Notification.js","Components/statistics/Statistics.js","Components/feedback/feedbackOptions/FeedbackOptions.js","Components/feedback/Feedback.js","Components/section/Section.js","Components/App.js","index.js","Components/feedback/feedbackOptions/FeedbackOptions.module.css"],"names":["Notification","message","Statistics","good","bad","neutral","total","positivePercentage","FeedbackOptions","addToGood","addToNeutral","addToBad","type","className","styles","onClick","Feedback","Section","children","title","toUpperCase","App","state","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","Component","ReactDOM","render","document","getElementById","module","exports"],"mappings":"uLAMeA,EAJM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,4BAAIA,KCmBEC,EAnBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,IAAKC,EAAyC,EAAzCA,QAASC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,qCACE,4CACCD,IAAU,EACT,qCACE,qCAAQH,KACR,wCAAWE,KACX,oCAAOD,KACP,uCAAUE,OACV,mDAAsBC,IAAtB,UAGF,cAAC,EAAD,CAAcN,QAAQ,0B,gBCOfO,EApBS,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,UAAWC,EAA6B,EAA7BA,aAAcC,EAAe,EAAfA,SAClD,OACE,qCACE,wBAAQC,KAAK,SAASC,UAAWC,IAAOX,KAAMY,QAAS,kBAAMN,KAA7D,kBAGA,wBACEG,KAAK,SACLC,UAAWC,IAAOT,QAClBU,QAAS,kBAAML,KAHjB,qBAOA,wBAAQE,KAAK,SAASC,UAAWC,IAAOV,IAAKW,QAAS,kBAAMJ,KAA5D,qBCoBSK,EAhCE,SAAC,GASX,IARLP,EAQI,EARJA,UACAN,EAOI,EAPJA,KACAC,EAMI,EANJA,IACAC,EAKI,EALJA,QACAM,EAII,EAJJA,SACAD,EAGI,EAHJA,aACAJ,EAEI,EAFJA,MACAC,EACI,EADJA,mBAEA,OACE,qCACE,8BACE,cAAC,EAAD,CACEE,UAAWA,EACXC,aAAcA,EACdC,SAAUA,MAGd,8BACE,cAAC,EAAD,CACER,KAAMA,EACNC,IAAKA,EACLC,QAASA,EACTC,MAAOA,EACPC,mBAAoBA,UClBfU,EATC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MAC3B,OACE,qCACE,6BAAKA,EAAMC,gBACVF,MCyDQG,E,4MA1DbC,MAAQ,CAAEnB,KAAM,EAAGE,QAAS,EAAGD,IAAK,G,EAEpCK,UAAY,WACV,EAAKc,UAAS,SAACC,GAEb,MAAO,CACLrB,KAFeqB,EAATrB,KAEO,O,EAInBO,aAAe,WACb,EAAKa,UAAS,SAACC,GAEb,MAAO,CACLnB,QAFkBmB,EAAZnB,QAEa,O,EAIzBM,SAAW,WACT,EAAKY,UAAS,SAACC,GAEb,MAAO,CACLpB,IAFcoB,EAARpB,IAEK,O,EAIjBqB,mBAAqB,WACnB,MAA+B,EAAKH,MAEpC,OAFA,EAAQnB,KAAR,EAAcE,QAAd,EAAuBD,K,EAKzBsB,gCAAkC,WAChC,IAAQvB,EAAS,EAAKmB,MAAdnB,KACFG,EAAQ,EAAKmB,qBAEnB,OADyBnB,EAAQqB,KAAKC,MAAOzB,EAAOG,EAAS,KAAO,G,4CAGtE,WACE,OACE,mCACE,cAAC,EAAD,CAASa,MAAM,sBAAf,SACE,cAAC,EAAD,CACEV,UAAWoB,KAAKpB,UAChBC,aAAcmB,KAAKnB,aACnBC,SAAUkB,KAAKlB,SACfR,KAAM0B,KAAKP,MAAMnB,KACjBE,QAASwB,KAAKP,MAAMjB,QACpBD,IAAKyB,KAAKP,MAAMlB,IAChBE,MAAOuB,KAAKJ,mBACZlB,mBAAoBsB,KAAKH,0C,GAnDnBI,a,MCClBC,IAASC,OACP,mCAEE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCT1BC,EAAOC,QAAU,CAAC,KAAO,8BAA8B,QAAU,iCAAiC,IAAM,gC","file":"static/js/main.57199f73.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Notification = ({ message }) => {\r\n  return <p>{message}</p>;\r\n};\r\n\r\nexport default Notification;\r\n","import React from \"react\";\r\nimport Notification from \"./notification/Notification\";\r\n\r\nconst Statistics = ({ good, bad, neutral, total, positivePercentage }) => {\r\n  return (\r\n    <>\r\n      <h3>Statistics</h3>\r\n      {total() > 0 ? (\r\n        <>\r\n          <p>Good{good}</p>\r\n          <p>Neutral{neutral}</p>\r\n          <p>Bad{bad}</p>\r\n          <p>Total:{total()}</p>\r\n          <p>Positive feedback:{positivePercentage()}%</p>\r\n        </>\r\n      ) : (\r\n        <Notification message=\"No feedback given\" />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\n","import React from \"react\";\r\nimport styles from \"./FeedbackOptions.module.css\";\r\n\r\nconst FeedbackOptions = ({ addToGood, addToNeutral, addToBad }) => {\r\n  return (\r\n    <>\r\n      <button type=\"button\" className={styles.good} onClick={() => addToGood()}>\r\n        Good\r\n      </button>\r\n      <button\r\n        type=\"button\"\r\n        className={styles.neutral}\r\n        onClick={() => addToNeutral()}\r\n      >\r\n        Neutral\r\n      </button>\r\n      <button type=\"button\" className={styles.bad} onClick={() => addToBad()}>\r\n        Bad\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from \"react\";\r\nimport Statistics from \"../statistics/Statistics\";\r\nimport FeedbackOptions from \"./feedbackOptions/FeedbackOptions\";\r\n\r\nconst Feedback = ({\r\n  addToGood,\r\n  good,\r\n  bad,\r\n  neutral,\r\n  addToBad,\r\n  addToNeutral,\r\n  total,\r\n  positivePercentage,\r\n}) => {\r\n  return (\r\n    <>\r\n      <div>\r\n        <FeedbackOptions\r\n          addToGood={addToGood}\r\n          addToNeutral={addToNeutral}\r\n          addToBad={addToBad}\r\n        />\r\n      </div>\r\n      <div>\r\n        <Statistics\r\n          good={good}\r\n          bad={bad}\r\n          neutral={neutral}\r\n          total={total}\r\n          positivePercentage={positivePercentage}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Feedback;\r\n","import React from \"react\";\r\n\r\nconst Section = ({ children, title }) => {\r\n  return (\r\n    <>\r\n      <h2>{title.toUpperCase()}</h2>\r\n      {children}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n","import React, { Component } from \"react\";\nimport Feedback from \"./feedback/Feedback\";\nimport Section from \"./section/Section\";\n\nclass App extends Component {\n  state = { good: 0, neutral: 0, bad: 0 };\n\n  addToGood = () => {\n    this.setState((prevState) => {\n      const { good } = prevState;\n      return {\n        good: good + 1,\n      };\n    });\n  };\n  addToNeutral = () => {\n    this.setState((prevState) => {\n      const { neutral } = prevState;\n      return {\n        neutral: neutral + 1,\n      };\n    });\n  };\n  addToBad = () => {\n    this.setState((prevState) => {\n      const { bad } = prevState;\n      return {\n        bad: bad + 1,\n      };\n    });\n  };\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    const total = good + neutral + bad;\n    return total;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    const total = this.countTotalFeedback();\n    const positiveFeedback = total ? Math.round((good / total) * 100) : 0;\n    return positiveFeedback;\n  };\n  render() {\n    return (\n      <>\n        <Section title=\"Pleas live feedback\">\n          <Feedback\n            addToGood={this.addToGood}\n            addToNeutral={this.addToNeutral}\n            addToBad={this.addToBad}\n            good={this.state.good}\n            neutral={this.state.neutral}\n            bad={this.state.bad}\n            total={this.countTotalFeedback}\n            positivePercentage={this.countPositiveFeedbackPercentage}\n          />\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Components/App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <>\n    {/* <h2>Hello</h2> */}\n    <App />\n  </>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"good\":\"FeedbackOptions_good__1eNXn\",\"neutral\":\"FeedbackOptions_neutral__2KNPI\",\"bad\":\"FeedbackOptions_bad__2EMOP\"};"],"sourceRoot":""}